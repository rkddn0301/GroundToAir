spring.application.name=airReservation

# 민감한 정보 가져오기
spring.config.import=application-secret.properties

# DB 연결
spring.datasource.url=jdbc:mariadb://192.168.254.101:3306/GroundToAir
spring.datasource.username=kws
spring.datasource.password=1234

# JPA 연결

# Hibernate가 DB 테이블을 어떻게 처리할지 결정
# none : 조회할 때만 처리. / update : 조회 뿐만아니라 갱신, 삭제도 처리.
spring.jpa.hibernate.ddl-auto=none

# 실행되는 SQL 쿼리를 콘솔에 출력
spring.jpa.show-sql=true

# SpringBoot의 DB Physical Naming Strategy의 경우 "모든 도트는 밑줄로 대체, Camel Case 대문자는 밑줄로 대체, 모든 테이블은 소문자로 구성" 이라 실제 쿼리 테이블명이 대문자일경우 구분을 못한다.
# hibernate의 DB Physical Naming Strategy의 경우 구분이 가능해서 바꾼것.
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# 이메일 전송 설정
# Gmail SMTP 서버 주소
spring.mail.host=smtp.gmail.com

# Gmail SMTP 서버 포트 번호
spring.mail.port=587

# SMTP 서버에 인증을 활성화하는 설정
spring.mail.properties.mail.smtp.auth=true

# TLS 암호화를 활성화하는 설정
spring.mail.properties.mail.smtp.starttls.enable=true

# 이메일 본문의 기본 문자 인코딩 설정
spring.mail.default-encoding=UTF-8
